name: Deploy site to HostGator

on:
  push:
    branches: [ "main" ]  # change if your default branch is different

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      # Build a package outside the source tree, then move it into the workspace
      - name: Pick source and pack safely
        run: |
          set -e
          # If a Website/ folder exists at repo root, deploy that; else deploy repo root
          if [ -d "Website" ]; then SRC="Website"; else SRC="."; fi
          echo "Packaging from: $SRC"

          PKG="$RUNNER_TEMP/package.tgz"
          tar -C "$SRC" -czf "$PKG" \
            --exclude='.git' \
            --exclude='.github' \
            --exclude='node_modules' \
            --exclude='.cpanel.yml' \
            .

          # Move into workspace so scp-action container can see it
          mv "$PKG" "$GITHUB_WORKSPACE/package.tgz"

      - name: Upload package to server (SCP)
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HG_HOST }}
          username: ${{ secrets.HG_USER }}
          port: ${{ secrets.HG_PORT }}
          key: ${{ secrets.HG_KEY }}
          source: package.tgz
          # Upload into a known inbox directory on the server
          target: /home/${{ secrets.HG_USER }}/deploy_inbox

      - name: Publish on server (SSH)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HG_HOST }}
          username: ${{ secrets.HG_USER }}
          port: ${{ secrets.HG_PORT }}
          key: ${{ secrets.HG_KEY }}
          script: |
            set -euo pipefail

            DOCROOT="${{ secrets.HG_DOCROOT }}"
            INBOX="/home/${{ secrets.HG_USER }}/deploy_inbox"
            STAGE="$INBOX/unpacked"

            mkdir -p "$INBOX" "$DOCROOT"
            rm -rf "$STAGE" && mkdir -p "$STAGE"

            # Some scp-action versions upload the tar as a file; others may have already unpacked.
            if [ -f "$INBOX/package.tgz" ]; then
              # We have a tar file: extract it into STAGE
              tar -xzf "$INBOX/package.tgz" -C "$STAGE"
            else
              # No tar found: assume files already exist in INBOX
              STAGE="$INBOX"
            fi

            # Require an index in STAGE before touching live
            if [ ! -f "$STAGE/index.html" ] && [ ! -f "$STAGE/index.php" ]; then
              echo "ERROR: No index.html or index.php found in staged content"; exit 1
            fi

            # Swap contents: clear docroot, then copy staged files
            find "$DOCROOT" -mindepth 1 -maxdepth 1 -exec rm -rf {} +
            cp -a "$STAGE"/. "$DOCROOT"/

            # Cleanup the inbox completely
            rm -rf "$INBOX"

            # Permissions
            find "$DOCROOT" -type d -exec chmod 755 {} +
            find "$DOCROOT" -type f -exec chmod 644 {} +

            # Record deployed commit for quick verification
            echo "${{ github.sha }}" > "$DOCROOT/_deployed.txt"

            # Final check
            test -f "$DOCROOT/index.html" -o -f "$DOCROOT/index.php"
